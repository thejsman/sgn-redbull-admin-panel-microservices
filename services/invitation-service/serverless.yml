service: admin-invitation-service
useDotenv: true
frameworkVersion: "3"

plugins:
  - serverless-bundle
  - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.region.${sls:stage}}

  environment:
    # ACCESS_KEY_ID: ${env:ACCESS_KEY_ID}
    # SECRET_ACCESS_KEY: ${env:SECRET_ACCESS_KEY}
    REGION: ${self:provider.region}
    INVITATION_TABLE_NAME: InvitationTable-${sls:stage}
    WAITLISTEDUSERS_TABLE_NAME: WaitlistedUsersTable-${sls:stage}
    ACCESS_CONTROL_ALLOW_ORIGIN: ${self.custom.accessControlAllowOrigin.${sls:stage}}
    USER_EXPORT_REQUEST_QUEUE: https://sqs.${aws:region}.amazonaws.com/${aws:accountId}/userExportRequestQueue-${sls:stage}
    BUCKET_FOR_WAITLISTED_USER_REPORT: ${self:custom.bucket.${sls:stage}}
    CDN_URL_FOR_BUCKET: ${self:custom.cdnURLs.${sls:stage}}
  iam:
    role:
      statements:
        - ${file(iam/InvitationTableIAM.yml):InvitationTableIAM}
        - ${file(iam/WaitlistedUsersIAM.yml):WaitlistedUsersIAM}
        - ${file(iam/InvokeLambdaIAM.yml):InvokeLambdaIAM}
        - ${file(iam/userExportRequestQueueIAM.yml):userExportRequestQueueIAM}
        - ${file(iam/UploadImageIAM.yml):UploadImageIAM}
        - ${file(iam/SendEmailIAM.yml):SendEmailIAM}
resources:
  Resources:
    userExportRequestQueue: ${file(resources/userExportRequestQueue.yml):userExportRequestQueue}

functions:
  createInvitationCode:
    handler: src/handlers/create.handler
    events:
      - http:
          method: POST
          path: /invitation/create
          cors: true
  fetchWaitListedUsers:
    handler: src/handlers/fetchWaitlistedUsers.handler
    events:
      - http:
          method: GET
          path: /fetchWaitListedUsers
          cors: true
  updateWaitListedUsers:
    handler: src/handlers/batchUpdateWaitlistedUser.handler
    events:
      - http:
          method: GET
          path: /updateWaitListedUsers
          cors: true
  deleteWaitListedUsers:
    handler: src/handlers/deleteWaitlistedUser.handler
    events:
      - http:
          method: DELETE
          path: /delete/{pk}
          cors: true
  requestUserDataToExport:
    handler: src/handlers/requestUserDataToExport.handler
    events:
      - http:
          method: GET
          path: /requestUserDataToExport
          cors: true
  processUserExportQueue:
    handler: src/handlers/lambdaToProcessUserExportRequest.handler
    events:
      - sqs:
          arn: !GetAtt [userExportRequestQueue, Arn]
custom:
  InvitationTableName: InvitationTable-${sls:stage}

  domains:
    dev: dev.sagoonlite.com
    testing: testing.sagoon.com
    staging: staging.sagoon.com
    prod: prod.sagoon.com

  region:
    dev: eu-central-1
    testing: ap-southeast-1
    staging: ap-southeast-1
    prod: ap-south-1

  bucket:
    dev: sagoon-2022-dev
    testing: sagoon-staging
    staging: sagoon-staging
    prod: sagoon-prod

  cdnURLs:
    dev: https://sagoon-2022-dev.s3.ap-south-1.amazonaws.com/
    staging: https://sagoon-staging-cdn.sagoon.com/
    prod: https://sagoon-prod-cdn.sagoon.com/
    testing: https://sagoon-staging-cdn.sagoon.com/

  customDomain:
    domainName: ${self:custom.domains.${sls:stage}}
    certificateName: ${self:custom.domains.${sls:stage}}
    basePath: invitationAdmin
    stage: ${sls:stage}
    createRoute53Record: true
    endpointType: edge
